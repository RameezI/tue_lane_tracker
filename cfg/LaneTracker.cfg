#!/usr/bin/env python

PACKAGE = "tue_lane_tracker"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("lane_avg_width", 	double_t,    0, "Average width of the lane [cm]", 300,  0, 1000)
gen.add("lane_min_width", 	double_t,    0, "Minimum width of the lane [cm]", 250,  0, 1000)
gen.add("lane_max_width", 	double_t,    0, "Maximum width of the lane [cm]", 500,  0, 1000)
gen.add("lane_std_width", 	double_t,    0, "Standard deviation for lane width [cm]", 15, 0, 100)
gen.add("lane_marker_width", 	double_t,    0, "Avergae width of lane-boundary markers [cm]", 15, 0, 50)


gen.add("cam_res_v", 	int_t,     0,    "Vertical resolution of the Camera Image [pixels]", 480, 0, 1024)
gen.add("cam_res_h", 	int_t,     0,    "Horizental resolution of the Camera Image [pixels]", 640, 0, 1024)
gen.add("cam_fx", 	double_t,  0,    "X-focal length of the Camera [pixels]", 563.9912133, 0, 10000)
gen.add("cam_fy", 	double_t,  0,    "Y-focal length of the Camera [pixels]", 526.0339806, 0, 10000)
gen.add("cam_cx", 	int_t, 	   0, 	 "PrincipalPoint X of the Camera in CameraCenter-CS [pixels]", 0, -512, 512)
gen.add("cam_cy", 	int_t, 	   0,	 "PrincipalPoint Y of the Camera in CameraCenter-CS [pixels]", 0, -512, 512)

gen.add("cam_pitch", 		double_t, 0, "pitch angle of the camera [degrees]", 0, -180, 180)
gen.add("cam_yaw", 		double_t, 0, "yaw angle of the camera[degrees]", 0,-180, 180)
gen.add("cam_height", 		double_t, 0, "camera height from the road plane [meters]", 1.5, 0, 100)
gen.add("cam_lateral_offset", 	double_t, 0, "camera lateral offset from the vehicle symmetry plane [meters]", 0, -100, 100)


gen.add("base_line_IBCS", 	int_t, 0, "Base-line in ImageBottom-CS [pixel-lines]",   0, 0, 1024)
gen.add("purview_line_IBCS", 	int_t, 0, "Purview-line in ImageBottom-CS [pixel-lines]", 160,0, 1024)
gen.add("step_lane_filter_cm", 	int_t, 0, "Step-size lane filter [cm]", 10, 0, 100)
gen.add("step_vp_filter", 	int_t, 0, "Step-size vp filter [cm]", 10, 0, 50)
gen.add("vp_range_ver", 	int_t, 0, "Vertical range of vanishing-point in either direction [pixel-lines]", 20, 0, 512)
gen.add("vp_range_hor", 	int_t, 0, "Horizentel range of vanishing-point in either direction[pixels]", 300, 0, 512)

gen.add("buffer_count", 	int_t, 0, "Buffer count for temporal pooling", 3, 0, 10)
gen.add("display_graphics",   	bool_t,0, "Display Graphics",  True)
   
exit(gen.generate(PACKAGE, "tue_lane_tracker", "LaneTracker"))

